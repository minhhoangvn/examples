- name: "Clean all {{ item }} namespace"
  command: "{{ item }}"
  changed_when: false
  loop:
    - kubectl delete namespace foo
    - kubectl delete namespace bar
    - kubectl delete namespace legacy
    - kubectl delete namespace istio-system
  register: kubectl
  no_log: True
  ignore_errors: yes

- name: Load variable file
  include_vars:
    dir: ../vars

####################################################################
############################ Clone k8s template ####################
####################################################################
####################################################################
# - name: Clone secret template
#   copy:
#     src: /vagrant/k8s/templates/keyfactor-secret-config-file.yaml 
#     dest: /vagrant/k8s/templates/keyfactor-secret-config-file-run.yaml 
#   changed_when: false

# - name: Clone istio config template
#   copy:
#     src: /vagrant/k8s/templates/single-cluster.yaml
#     dest: /vagrant/k8s/templates/single-cluster-run.yaml
#   changed_when: false

# - name: Clone secret config template
#   copy:
#     src: /vagrant/k8s/templates/keyfactor-secret-config-file.yaml
#     dest: /vagrant/k8s/templates/keyfactor-secret-config-file-run.yaml
#   changed_when: false

# - name: Clone secret with another config name template
#   copy:
#     src: /vagrant/k8s/templates/keyfactor-secret-config-another-name.yaml
#     dest: /vagrant/k8s/templates/keyfactor-secret-config-another-name-run.yaml
#   changed_when: false

# - name: Clone secret template with empty metadata
#   copy:
#     src: /vagrant/k8s/templates/cluster-with-secret-empty-data.yaml
#     dest: /vagrant/k8s/templates/cluster-with-secret-empty-data-run.yaml
#   changed_when: false

# - name: Clone cluster with secret template
#   copy:
#     src: /vagrant/k8s/templates/cluster-with-secret.yaml 
#     dest: /vagrant/k8s/templates/cluster-with-secret-run.yaml 
#   changed_when: false

# - name: Clone single cluster with another config name template
#   copy:
#     src: /vagrant/k8s/templates/single-cluster-with-another-config-name.yaml
#     dest: /vagrant/k8s/templates/single-cluster-with-another-config-name-run.yaml
#   changed_when: false

# - name: Clone single cluster-a template
#   copy:
#     src: /vagrant/k8s/templates/single-cluster.yaml 
#     dest: /vagrant/k8s/templates/single-cluster-a-run.yaml 
#   changed_when: false

# - name: Clone single cluster-b template
#   copy:
#     src: /vagrant/k8s/templates/single-cluster.yaml 
#     dest: /vagrant/k8s/templates/single-cluster-b-run.yaml 
#   changed_when: false

# - name: Clone single cluster with vault template
#   copy:
#     src: /vagrant/k8s/templates/single-cluster-with-vault.yaml
#     dest: /vagrant/k8s/templates/single-cluster-with-vault-run.yaml
#   changed_when: false

#####################################################################
################### Change Value Template ###########################
#####################################################################
#####################################################################

# - name: "Replace variable values in secret file"
#   become: yes
#   become_user: root
#   lineinfile:
#     path: /vagrant/k8s/templates/keyfactor-secret-run.yaml 
#     # Line to Search/Match against
#     regexp: '{{item.From}}'
#     # Line to Replace with
#     line: '{{item.To}}'
#     state: present
#   with_items:
#     - { From: '__CA__NAME__', To: "  caName: \"{{ caName }}\""}
#     - { From: '__AUTH__TOKEN__', To: "  authToken: \"{{ authToken }}\""}
#     - { From: '__CA__TEMPLATE__', To: "  caTemplate: \"{{ caTemplate }}\""}
#     - { From: '__APP__KEY__', To: "  appKey: \"{{ appKey }}\""  }
#   changed_when: false

# - name: "Replace variable values in secret config file"
#   become: yes
#   become_user: root
#   lineinfile:
#     path: /vagrant/k8s/templates/keyfactor-secret-config-file-run.yaml
#     # Line to Search/Match against
#     regexp: '{{item.From}}'
#     # Line to Replace with
#     line: '{{item.To}}'
#     state: present
#   with_items:
#     - { From: '__CA__NAME__', To: "      \"caName\": \"{{ caName }}\","}
#     - { From: '__AUTH__TOKEN__', To: "      \"authToken\": \"{{ authToken }}\","}
#     - { From: '__CA__TEMPLATE__', To: "      \"caTemplate\": \"{{ caTemplate }}\","}
#     - { From: '__APP__KEY__', To: "      \"appKey\": \"{{ appKey }}\""  }
#   changed_when: false

# - name: "Replace variable values in secret config file with another name"
#   become: yes
#   become_user: root
#   lineinfile:
#     path: /vagrant/k8s/templates/keyfactor-secret-config-another-name-run.yaml
#     # Line to Search/Match against
#     regexp: '{{item.From}}'
#     # Line to Replace with
#     line: '{{item.To}}'
#     state: present
#   with_items:
#     - { From: '__CA__NAME__', To: "      \"caName\": \"{{ caName }}\","}
#     - { From: '__AUTH__TOKEN__', To: "      \"authToken\": \"{{ authToken }}\","}
#     - { From: '__CA__TEMPLATE__', To: "      \"caTemplate\": \"{{ caTemplate }}\","}
#     - { From: '__APP__KEY__', To: "      \"appKey\": \"{{ appKey }}\""  }
#   changed_when: false

# - name: "Replace variable values in cluster with secret"
#   become: yes
#   become_user: root
#   lineinfile:
#     path: /vagrant/k8s/templates/cluster-with-secret-run.yaml  
#     # Line to Search/Match against
#     regexp: '{{item.From}}'
#     # Line to Replace with
#     line: '{{item.To}}'
#     state: present
#   with_items:
#     - { From: '__CA__ADDR__', To: "      caAddress: \"{{ caAddress }}\""}
#   changed_when: false

# - name: "Replace variable values in single cluster with vault"
#   become: yes
#   become_user: root
#   lineinfile:
#     path: /vagrant/k8s/templates/single-cluster-with-vault.yaml  
#     # Line to Search/Match against
#     regexp: '{{item.From}}'
#     # Line to Replace with
#     line: '{{item.To}}'
#     state: present
#   with_items:
#     - { From: '__CLUSTER__NAME__', To: "        clusterName: kms.cluster.single"}
#     - { From: '__CA__ADDR__', To: "      caAddress: \"{{ caAddress }}\""}
#   changed_when: false

# - name: "Replace variable values in single cluster-a"
#   become: yes
#   become_user: root
#   lineinfile:
#     path: /vagrant/k8s/templates/single-cluster-a-run.yaml  
#     # Line to Search/Match against
#     regexp: '{{item.From}}'
#     # Line to Replace with
#     line: '{{item.To}}'
#     state: present
#   with_items:
#     - { From: '__CLUSTER__NAME__', To: "        clusterName: kms.cluster.a"}
#     - { From: '__CA__ADDR__', To: "      caAddress: \"{{ caAddress }}\""}
#   changed_when: false

# - name: "Replace variable values in single cluster-b"
#   become: yes
#   become_user: root
#   lineinfile:
#     path: /vagrant/k8s/templates/single-cluster-b-run.yaml  
#     # Line to Search/Match against
#     regexp: '{{item.From}}'
#     # Line to Replace with
#     line: '{{item.To}}'
#     state: present
#   with_items:
#     - { From: '__CLUSTER__NAME__', To: "        clusterName: kms.cluster.b"}
#     - { From: '__CA__ADDR__', To: "      caAddress: \"{{ caAddress }}\""}
#   changed_when: false

# - name: "Replace variable values in single cluster with empty metadata"
#   become: yes
#   become_user: root
#   lineinfile:
#     path: /vagrant/k8s/templates/cluster-with-secret-empty-data-run.yaml  
#     # Line to Search/Match against
#     regexp: '{{item.From}}'
#     # Line to Replace with
#     line: '{{item.To}}'
#     state: present
#   with_items:
#     - { From: '__CLUSTER__NAME__', To: "        clusterName: kms.cluster.single"}
#     - { From: '__CA__ADDR__', To: "      caAddress: \"{{ caAddress }}\""}
#   changed_when: false

# - name: "Replace variable values in single cluster with another config name"
#   become: yes
#   become_user: root
#   lineinfile:
#     path: /vagrant/k8s/templates/single-cluster-with-another-config-name-run.yaml 
#     # Line to Search/Match against
#     regexp: '{{item.From}}'
#     # Line to Replace with
#     line: '{{item.To}}'
#     state: present
#   with_items:
#     - { From: '__CLUSTER__NAME__', To: "        clusterName: kms.cluster.single"}
#     - { From: '__CA__ADDR__', To: "      caAddress: \"{{ caAddress }}\""}
#   changed_when: false

- name: "Create namespace {{ item }}"
  command: "{{ item }}"
  register: kubectl
  changed_when: false
  loop:
    - kubectl create namespace foo
    - kubectl create namespace bar
    - kubectl create namespace legacy
    - kubectl create namespace istio-system

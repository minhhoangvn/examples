- name: "Delete httbin test service {{ item }}"
  command:  'kubectl delete -f "{{ playbook_dir }}/../../templates/httpbin.yaml" -n {{ item }}'
  register: kubectl
  changed_when: false
  ignore_errors: yes
  loop:
    - foo
    - bar
    - legacy

- name: "Delete sleep test service {{ item }}"
  command:  'kubectl delete -f "{{ playbook_dir }}/../../templates/sleep.yaml" -n {{ item }}'
  register: kubectl
  changed_when: false
  ignore_errors: yes
  loop:
    - foo
    - bar
    - legacy

- name: Clean mTLS policy
  command:  'kubectl delete -f "{{ playbook_dir }}/../../templates/mtls-policy.yaml" -n istio-system'
  register: kubectl
  changed_when: false
  ignore_errors: yes

- name: "Delete all deployment {{ item }} namespace"
  command: "kubectl delete deployment --all -n {{ item }}"
  register: kubectl
  changed_when: false
  ignore_errors: yes
  loop:
    - foo
    - bar
    - legacy   

- name: "Delete all secret {{ item }} namespace"
  command: "kubectl delete secret --all -n {{ item }}"
  register: kubectl
  changed_when: false
  ignore_errors: yes
  loop:
    - foo
    - bar
    - legacy 

- name: "Delete all configmap {{ item }} namespace"
  command: "kubectl delete configmap --all -n {{ item }}"
  register: kubectl
  changed_when: false
  ignore_errors: yes
  loop:
    - foo
    - bar
    - legacy

- name: "Delete all svc {{ item }} namespace"
  command: "kubectl delete svc --all -n {{ item }}"
  changed_when: false
  ignore_errors: yes
  loop:
    - foo
    - bar
    - legacy  

- name: "Delete all serviceentries {{ item }} namespace"
  command: " kubectl delete serviceentries --all -n {{ item }}"
  changed_when: false
  ignore_errors: yes
  loop:
    - foo
    - bar
    - legacy 

- name: test
  set_fact:
    keyfactor_namespace: "abc"
    
- name: "Delete {{ item }} namespace"
  command: "kubectl delete namespace {{ item }}"
  changed_when: false
  ignore_errors: yes
  loop:
    - foo
    - bar
    - legacy
    - istio-system
    - "{{ keyfactor_namespace }}"